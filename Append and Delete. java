import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'appendAndDelete' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts following parameters:
     *  1. STRING s
     *  2. STRING t
     *  3. INTEGER k
     */

    public static String appendAndDelete(String s, String t, int k) {
    // Write your code here
        int i, count = 0, diffS = 0, diffT = 0;
        
        if(s.equalsIgnoreCase(t))   
            return "Yes";
        else if(s.length() == 0 || t.length() == 0)
            diffS = s.length() + t.length();
        else
        {
            for(i = 0; i < Math.min(s.length(), t.length()); i++){
                if(s.charAt(i) == t.charAt(i)){
                    ++count;
                }
                else    break;
            }
            diffS = s.length() - count;
            diffT = t.length() - count;
        }
        
        
        System.out.println(diffS+diffT);
        
        if(diffS + diffT <= k && (k - diffS - diffT) % 2 == 0)  return "Yes";
        else if(s.length() + t.length() <= k)    return "Yes";
        else    return "No";
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String s = bufferedReader.readLine();

        String t = bufferedReader.readLine();

        int k = Integer.parseInt(bufferedReader.readLine().trim());

        String result = Result.appendAndDelete(s, t, k);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
